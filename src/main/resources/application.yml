#日志
logging:
  config: classpath:logback-spring.xml
  path: D:/my/workspace/chapter2/log

#服务端口
server:
  port: 8090
#项目contextPath
  servlet:
    context-path: /chapter2
#tomcat最大线程数，默认为200
  tomcat:
    max-threads: 100
#tomcat的URI编码
    uri-encoding: UTF-8
##数据库连接信息
spring:
  datasource:
    url: jdbc:mysql://127.0.0.1:3306/mydb?useUnicode=true&characterEncoding=UTF-8&serverTimezone=GMT%2B8
    username: root
    password: '!@#$%^'
    driver-class-name: com.mysql.cj.jdbc.Driver
    platform: mysql
###################以下为druid增加的配置###########################
    type: com.alibaba.druid.pool.DruidDataSource
# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大\
    initialSize: 5
    minIdle: 5
    maxActive: 20
# 配置获取连接等待超时的时间
    maxWait: 60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
# 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
#spring.datasource.useGlobalDataSourceStat=true
###############以上为配置druid添加的配置########################################

###############redis 数据库配置########################################
  redis:
     # Redis数据库索引（默认为0）
     database : 0
     # Redis服务器地址
     host : 10.135.101.101
     # Redis服务器连接端口
     port : 6379
     # Redis服务器连接密码（默认为空）
     password : Extracme888
     # 连接池最大连接数（使用负值表示没有限制）
     pool.max-active : 8
     # 连接池最大阻塞等待时间（使用负值表示没有限制）
     pool.max-wait : -1
     # 连接池中的最大空闲连接
     pool.max-idle : 8
     # 连接池中的最小空闲连接
     pool.min-idle : 0
     # 连接超时时间（毫秒）
     timeout : 5000
###############以上 redis 数据库配置########################################

# 如果是放在src/main/java目录下 classpath:/com/yourpackage/*/mapper/*Mapper.xml
# 如果是放在resource目录 classpath:/mapper/*Mapper.xml
mybatis-plus:
  mapper-locations: classpath:/com/zhangrenhua/springboot/mapper/*Mapper.xml
#实体扫描，多个package用逗号或者分号分隔
  typeAliasesPackage: com.zhangrenhua.springboot.entity


#主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
  global-config:
      id-type: 0
      #字段策略 0:"忽略判断",1:"非 NULL 判断"),2:"非空判断"
      field-strategy: 2
      #驼峰下划线转换
      db-column-underline: false
      #刷新mapper 调试神器
      refresh-mapper: true
      #数据库大写下划线转换
      #capital-mode: true
      #逻辑删除配置（下面3个配置）
      sql-injector: com.baomidou.mybatisplus.mapper.LogicSqlInjector
      logic-delete-value: 1
      logic-not-delete-value: 0
  configuration:
    #配置返回数据库(column下划线命名&&返回java实体是驼峰命名)，自动匹配无需as（没开启这个，SQL需要写as： select user_id as userId）
    map-underscore-to-camel-case: true
    cache-enabled: false




